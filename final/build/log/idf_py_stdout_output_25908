[1/9] Performing build step for 'bootloader'
[1/1] cmd.exe /C "cd /D C:\Users\KPC\Documents\PC_embedded\rtos\final\build\bootloader\esp-idf\esptool_py && C:\Users\KPC\.espressif\python_env\idf5.2_py3.11_env\Scripts\python.exe C:/Users/KPC/esp/v5.2.1/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 C:/Users/KPC/Documents/PC_embedded/rtos/final/build/bootloader/bootloader.bin"
Bootloader binary size 0x6860 bytes. 0x7a0 bytes (7%) free.
[2/7] Building C object esp-idf/i2cdev/CMakeFiles/__idf_i2cdev.dir/i2cdev.c.obj
[3/7] Linking C static library esp-idf\i2cdev\libi2cdev.a
[4/7] Generating ld/sections.ld
[5/7] Linking CXX executable final.elf
[6/7] Generating binary image from built executable
esptool.py v4.7.0
Creating esp32 image...
Merged 2 ELF sections
Successfully created esp32 image.
Generated C:/Users/KPC/Documents/PC_embedded/rtos/final/build/final.bin
[7/7] cmd.exe /C "cd /D C:\Users\KPC\Documents\PC_embedded\rtos\final\build\esp-idf\esptool_py && C:\Users\KPC\.espressif\python_env\idf5.2_py3.11_env\Scripts\python.exe C:/Users/KPC/esp/v5.2.1/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app C:/Users/KPC/Documents/PC_embedded/rtos/final/build/partition_table/partition-table.bin C:/Users/KPC/Documents/PC_embedded/rtos/final/build/final.bin"
final.bin binary size 0xcb330 bytes. Smallest app partition is 0x100000 bytes. 0x34cd0 bytes (21%) free.
